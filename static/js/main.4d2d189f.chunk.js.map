{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","options","onPerPageChange","withInfo","pages","availablePages","Math","ceil","i","push","className","htmlFor","name","id","value","onChange","event","target","map","option","length","href","classNames","onClick","preventDefault","item","handleClick","App","state","changePage","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QA6IeA,EA/HqB,SAAC,GAYnC,IAJK,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,KACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,gBAEI,IADJC,gBACI,SACEC,EAAQ,GACRC,EAAiBC,KAAKC,KAAKV,EAAQC,GAEhCU,EAAI,EAAGA,GAAKH,EAAgBG,GAAK,EACxCJ,EAAMK,KAAKD,GAmCb,OACE,sBAAKE,UAAU,YAAf,UACE,wBAAOC,QAAQ,OAAf,mCAEG,IACD,wBACEC,KAAK,GACLC,GAAG,OACHC,MAAOhB,EACPiB,SAAU,SAACC,GAjBQ,IAACF,IAkBCE,EAAMC,OAAOH,MAjBpChB,KAAagB,GAIjBZ,GAAiBY,IAQb,SAQGb,EAAQiB,KAAI,SAAAC,GAAM,OACjB,wBAEEL,MAAOK,EAFT,SAIGA,GAHIA,WAQb,sBAAKT,UAAU,kBAAf,UACGP,GACC,sBAAKO,UAAU,kBAAf,WACIX,EAAO,GAAKD,EAAU,EACvB,IAFH,IAIG,IACAC,IAASK,EAAMgB,OAASvB,EAASE,EAAOD,EACxC,IANH,KAQG,IACAD,KAGL,qBAAIa,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAd,SACE,mBACEW,KAAK,WACLX,UAAWY,IAAW,YAAa,CAAE,sBAAgC,IAATvB,IAC5DwB,QApEgB,SAACP,GAC3BA,EAAMQ,iBACO,IAATzB,GAIJC,EAAaD,EAAO,IA2DZ,wBAQDK,EAAMc,KAAI,SAAAO,GAAI,OACb,oBAEEf,UAAU,YAFZ,SAIE,mBACEW,KAAK,WACLX,UAAWY,IAAW,YAAa,CAAE,oBAAqBG,IAAS1B,IACnEwB,QAAS,SAACP,GACRA,EAAMQ,iBAxFF,SAACC,GACf1B,IAAS0B,GACXzB,EAAayB,GAuFDC,CAAYD,IALhB,SAQGA,KAXEA,MAeT,oBAAIf,UAAU,YAAd,SACE,mBACEA,UAAWY,IAAW,YAAa,CAAE,sBAAuBvB,IAASM,IACrEgB,KAAK,WACLE,QArFY,SAACP,GACvBA,EAAMQ,iBACFzB,IAASM,GAIbL,EAAaD,EAAO,IA4EZ,8BCpHN4B,E,4MACJC,MAAe,CACb/B,MAAO,GACPC,QAAS,EACTC,KAAM,EACNE,QAAS,CAAC,EAAG,EAAG,GAAI,K,EAGtB4B,WAAa,SAAC9B,GACZ,EAAK+B,SAAS,CACZ/B,U,EAIJG,gBAAkB,SAACJ,GACjB,EAAKgC,SAAS,CACZhC,a,4CAIJ,WACE,MAKIiC,KAAKH,MAJP9B,EADF,EACEA,QACAC,EAFF,EAEEA,KACAF,EAHF,EAGEA,MACAI,EAJF,EAIEA,QAGF,OACE,sBAAKS,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAAc+B,KAAKF,WACnB5B,QAASA,EACTC,gBAAiB6B,KAAK7B,gBACtBC,UAAQ,W,GAtCA6B,IAAMC,WA6CTN,ICrDfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d2d189f.chunk.js","sourcesContent":["import React from 'react';\nimport './Pagination.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  page: number,\n  onPageChange: (page: number) => void,\n  options: number[],\n  onPerPageChange: (perPage: number) => void,\n  withInfo: boolean,\n};\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  options,\n  onPerPageChange,\n  withInfo = false,\n}) => {\n  const pages = [];\n  const availablePages = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= availablePages; i += 1) {\n    pages.push(i);\n  }\n\n  const handleClick = (item: number) => {\n    if (page !== item) {\n      onPageChange(item);\n    }\n  };\n\n  const handlePreviousClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (page === 1) {\n      return;\n    }\n\n    onPageChange(page - 1);\n  };\n\n  const handleNextClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (page === availablePages) {\n      return;\n    }\n\n    onPageChange(page + 1);\n  };\n\n  const handleSelectChange = (value: string) => {\n    if (perPage === +value) {\n      return;\n    }\n\n    onPerPageChange(+value);\n  };\n\n  return (\n    <div className=\"container\">\n      <label htmlFor=\"page\">\n        Choose items per page:\n        {' '}\n        <select\n          name=\"\"\n          id=\"page\"\n          value={perPage}\n          onChange={(event) => {\n            handleSelectChange(event.target.value);\n          }}\n        >\n          {options.map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </select>\n      </label>\n      <nav className=\"page-navigation\">\n        {withInfo && (\n          <div className=\"pagination-info\">\n            {(page - 1) * perPage + 1}\n            {' '}\n            -\n            {' '}\n            {page === pages.length ? total : (page * perPage)}\n            {' '}\n            of\n            {' '}\n            {total}\n          </div>\n        )}\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <a\n              href=\"https://\"\n              className={classNames('page-link', { 'page-link--disabled': page === 1 })}\n              onClick={handlePreviousClick}\n            >\n              Previous\n            </a>\n          </li>\n          {pages.map(item => (\n            <li\n              key={item}\n              className=\"page-item\"\n            >\n              <a\n                href=\"https://\"\n                className={classNames('page-link', { 'page-link--active': item === page })}\n                onClick={(event) => {\n                  event.preventDefault();\n                  handleClick(item);\n                }}\n              >\n                {item}\n              </a>\n            </li>\n          ))}\n          <li className=\"page-item\">\n            <a\n              className={classNames('page-link', { 'page-link--disabled': page === availablePages })}\n              href=\"https://\"\n              onClick={handleNextClick}\n            >\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination/Pagination';\n\ntype State = {\n  total: number,\n  perPage: number,\n  page: number,\n  options: number[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n    options: [3, 5, 10, 20],\n  };\n\n  changePage = (page: number) => {\n    this.setState({\n      page,\n    });\n  };\n\n  onPerPageChange = (perPage: number) => {\n    this.setState({\n      perPage,\n    });\n  };\n\n  render() {\n    const {\n      perPage,\n      page,\n      total,\n      options,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Pagination</h1>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onPageChange={this.changePage}\n          options={options}\n          onPerPageChange={this.onPerPageChange}\n          withInfo\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}